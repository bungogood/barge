namespace Barge;

struct Uuid {
  bytes:[ubyte:16];
}

struct NodeDetails {
    uuid:Uuid;
    ip:uint32;
    port:uint16;
}

union Event {
    AppendEntriesReq,
    AppendEntriesRes,
    ElectionReq,
    ElectionRes,
    JoinReq,
    JoinRes
}

table JoinReq {
    prev_index:uint64;
    prev_term:uint64;
    node:NodeDetails;
}

table JoinRes {
    success:bool;
    leader:NodeDetails;
    message:string;
}

table Command {
    data:[ubyte];
}

table MembershipChange {
    new_members:[NodeDetails];
    removed_members:[Uuid];
}

union Entry {
    Command,
    MembershipChange
}

table LogEntry {
    index:uint64;
    term:uint64;
    data:Entry;
}

table AppendEntriesReq {
    term:uint64;
    commit_index:uint64;
    prev_index:uint64;
    prev_term:uint64;
    entries:[LogEntry];
}

table AppendEntriesRes {
    term:uint64;
    append_index:uint64;
    commit_index:uint64;
    success:bool;
}

table ElectionReq {
    term:uint64;
    candidate_id:Uuid;
    prev_index:uint64;
    prev_term:uint64;
}

table ElectionRes {
    term:uint64;
    vote_granted:bool;
}

table Message {
    sender:Uuid;
    timestamp:int64;
    event:Event;
}

root_type Message;
